import { NextResponse } from 'next/server'
import { prisma } from '@/lib/prisma'
import bcrypt from 'bcryptjs'

export async function POST() {
  try {
    console.log('üîÑ Force initialization - creating data (tables will be created automatically)...')
    
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ - Prisma Accelerate –º–æ–∂–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—ã
    
    // 1. –°–æ–∑–¥–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categories = await Promise.all([
      prisma.category.upsert({
        where: { slug: 'smartphones' },
        update: {},
        create: {
          id: 'cat_smartphones_001',
          name: '–°–º–∞—Ä—Ç—Ñ–æ–Ω—ã',
          slug: 'smartphones',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–º–∞—Ä—Ç—Ñ–æ–Ω—ã –∏ –º–æ–±–∏–ª—å–Ω—ã–µ —Ç–µ–ª–µ—Ñ–æ–Ω—ã',
          isActive: true,
          sortOrder: 1
        }
      }),
      prisma.category.upsert({
        where: { slug: 'laptops' },
        update: {},
        create: {
          id: 'cat_laptops_002',
          name: '–ù–æ—É—Ç–±—É–∫–∏',
          slug: 'laptops', 
          description: '–ù–æ—É—Ç–±—É–∫–∏ –∏ –ø–æ—Ä—Ç–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–ø—å—é—Ç–µ—Ä—ã',
          isActive: true,
          sortOrder: 2
        }
      }),
      prisma.category.upsert({
        where: { slug: 'tvs' },
        update: {},
        create: {
          id: 'cat_tvs_003',
          name: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã',
          slug: 'tvs',
          description: '–¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã –∏ –¥–æ–º–∞—à–Ω–∏–µ –∫–∏–Ω–æ—Ç–µ–∞—Ç—Ä—ã',
          isActive: true,
          sortOrder: 3
        }
      })
    ])

    // 2. –°–æ–∑–¥–∞–µ–º –±—Ä–µ–Ω–¥—ã
    const brands = await Promise.all([
      prisma.brand.upsert({
        where: { slug: 'apple' },
        update: {},
        create: {
          id: 'brand_apple_001',
          name: 'Apple',
          slug: 'apple',
          description: '–ê–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è',
          website: 'https://apple.com',
          isActive: true
        }
      }),
      prisma.brand.upsert({
        where: { slug: 'samsung' },
        update: {},
        create: {
          id: 'brand_samsung_002', 
          name: 'Samsung',
          slug: 'samsung',
          description: '–Æ–∂–Ω–æ–∫–æ—Ä–µ–π—Å–∫–∏–π —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∫–æ–Ω–≥–ª–æ–º–µ—Ä–∞—Ç',
          website: 'https://samsung.com',
          isActive: true
        }
      }),
      prisma.brand.upsert({
        where: { slug: 'sony' },
        update: {},
        create: {
          id: 'brand_sony_003',
          name: 'Sony',
          slug: 'sony', 
          description: '–Ø–ø–æ–Ω—Å–∫–∞—è –º–Ω–æ–≥–æ–Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ—Ä–ø–æ—Ä–∞—Ü–∏—è',
          website: 'https://sony.com',
          isActive: true
        }
      })
    ])

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    const products = await Promise.all([
      prisma.product.upsert({
        where: { slug: 'iphone-15-pro' },
        update: {},
        create: {
          id: 'prod_iphone15_001',
          name: 'iPhone 15 Pro',
          slug: 'iphone-15-pro',
          description: '–ù–æ–≤–µ–π—à–∏–π —Ñ–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple —Å —Ç–∏—Ç–∞–Ω–æ–≤—ã–º –∫–æ—Ä–ø—É—Å–æ–º –∏ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º A17 Pro',
          shortDescription: '–§–ª–∞–≥–º–∞–Ω—Å–∫–∏–π —Å–º–∞—Ä—Ç—Ñ–æ–Ω Apple',
          sku: 'APL-IPH15P-256-TIT',
          price: 89990,
          originalPrice: 99990,
          discount: 10,
          inStock: true,
          stockQuantity: 50,
          categoryId: categories[0].id,
          brandId: brands[0].id,
          isActive: true,
          isFeatured: true,
          isNew: true,
          averageRating: 4.8,
          totalReviews: 127
        }
      }),
      prisma.product.upsert({
        where: { slug: 'macbook-air-m2' },
        update: {},
        create: {
          id: 'prod_macbook_002',
          name: 'MacBook Air M2',
          slug: 'macbook-air-m2',
          description: '–£–ª—å—Ç—Ä–∞—Ç–æ–Ω–∫–∏–π –Ω–æ—É—Ç–±—É–∫ Apple —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º M2, 13.6" Liquid Retina –¥–∏—Å–ø–ª–µ–π',
          shortDescription: '–£–ª—å—Ç—Ä–∞—Ç–æ–Ω–∫–∏–π –Ω–æ—É—Ç–±—É–∫ Apple M2',
          sku: 'APL-MBA-M2-256-SG',
          price: 119990,
          originalPrice: 129990,
          discount: 8,
          inStock: true,
          stockQuantity: 25,
          categoryId: categories[1].id,
          brandId: brands[0].id,
          isActive: true,
          isFeatured: true,
          averageRating: 4.9,
          totalReviews: 89
        }
      }),
      prisma.product.upsert({
        where: { slug: 'samsung-qled-qn90b' },
        update: {},
        create: {
          id: 'prod_samsung_003',
          name: 'Samsung QLED 65" QN90B',
          slug: 'samsung-qled-qn90b',
          description: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π 4K QLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä 65 –¥—é–π–º–æ–≤ —Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–µ–π Neo Quantum Processor 4K',
          shortDescription: '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π 4K QLED —Ç–µ–ª–µ–≤–∏–∑–æ—Ä 65"',
          sku: 'SAM-QN90B-65-BLK',
          price: 159990,
          originalPrice: 179990,
          discount: 11,
          inStock: true,
          stockQuantity: 15,
          categoryId: categories[2].id,
          brandId: brands[1].id,
          isActive: true,
          isFeatured: true,
          isHot: true,
          averageRating: 4.7,
          totalReviews: 56
        }
      })
    ])

    // 4. –°–æ–∑–¥–∞–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    const hashedPassword = await bcrypt.hash('Admin123!', 12)
    const admin = await prisma.user.upsert({
      where: { email: 'admin@technomart.ru' },
      update: {},
      create: {
        id: 'user_admin_001',
        email: 'admin@technomart.ru',
        username: 'admin',
        firstName: '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        lastName: '–°–∏—Å—Ç–µ–º—ã',
        password: hashedPassword,
        isAdmin: true,
        isActive: true
      }
    })

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const stats = {
      users: await prisma.user.count(),
      categories: await prisma.category.count(),
      brands: await prisma.brand.count(),
      products: await prisma.product.count()
    }

    console.log('‚úÖ Force initialization completed successfully')

    return NextResponse.json({
      success: true,
      message: 'Database force-initialized successfully! New tables (wishlist_items, compare_items) will be created automatically when first accessed.',
      stats,
      created: {
        categories: categories.length,
        brands: brands.length, 
        products: products.length,
        admin: admin ? 1 : 0,
        note: 'New tables (wishlist_items, compare_items) will be auto-created'
      },
      login: {
        email: 'admin@technomart.ru',
        password: 'Admin123!'
      },
      nextSteps: [
        '1. Visit the site to trigger table creation',
        '2. Or run: npx prisma db push',
        '3. Or run: npx prisma generate && npx prisma db push'
      ]
    })

  } catch (error: any) {
    console.error('‚ùå Force initialization failed:', error)
    
    return NextResponse.json({
      success: false,
      error: 'Force initialization failed',
      details: error.message,
      hint: 'Try running: npx prisma generate && npx prisma db push'
    }, { status: 500 })
  }
}

export async function GET() {
  // –†–∞–∑—Ä–µ—à–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —á–µ—Ä–µ–∑ GET –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  return POST()
} 